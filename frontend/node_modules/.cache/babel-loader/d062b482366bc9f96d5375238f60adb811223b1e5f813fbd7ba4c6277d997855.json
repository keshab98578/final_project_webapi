{"ast":null,"code":"import axios from \"axios\";\n\n//creating backend configuration\n\nconst Api = axios.create({\n  baseURL: \"http://localhost:3000\",\n  withCredentials: true,\n  headers: {\n    \"Content-Type\": \"multipart/form-data\"\n  }\n});\n\n//make a config for token\nconst config = {\n  headers: {\n    authorization: `Bearer ${localStorage.getItem(\"token\")}`\n  }\n};\n\n//Test Api\nexport const testApi = () => Api.get(\"/test\");\n\n// Register API\nexport const registerUserApi = data => Api.post(\"/api/user/create\", data);\n\n//Login API\nexport const loginUserApi = data => Api.post(\"/api/user/login\", data);\n\n// create product API\nexport const createProductApi = data => Api.post(\"/api/product/create\", data);\n\n//get all products api\nexport const getAllProductsApi = () => Api.get(\"/api/product/get_all_products\", config);\n\n// get single product api\nexport const getSingleProductApi = id => Api.get(`/api/product/get_single_product/${id}`, config);\n\n// delete product api\nexport const deleteProductApi = id => Api.delete(`/api/product/delete_product/${id}`, config);\n\n// update product api\nexport const updateProductApi = (id, data) => Api.put(`/api/product/update_product/${id}`, data, config);\n\n//http://localhost:5500/test","map":{"version":3,"names":["axios","Api","create","baseURL","withCredentials","headers","config","authorization","localStorage","getItem","testApi","get","registerUserApi","data","post","loginUserApi","createProductApi","getAllProductsApi","getSingleProductApi","id","deleteProductApi","delete","updateProductApi","put"],"sources":["/Users/keshabbasnet/Documents/web_development/32A-main/frontend/src/apis/Api.js"],"sourcesContent":["import axios from \"axios\";\n\n//creating backend configuration\n\nconst Api = axios.create({\n  baseURL: \"http://localhost:3000\",\n  withCredentials: true,\n  headers: {\n    \"Content-Type\": \"multipart/form-data\",\n  },\n});\n\n//make a config for token\nconst config = {\n  headers: {\n    authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n  },\n};\n\n//Test Api\nexport const testApi = () => Api.get(\"/test\");\n\n// Register API\nexport const registerUserApi = (data) => Api.post(\"/api/user/create\", data);\n\n//Login API\nexport const loginUserApi = (data) => Api.post(\"/api/user/login\", data);\n\n// create product API\nexport const createProductApi = (data) => Api.post(\"/api/product/create\", data);\n\n//get all products api\nexport const getAllProductsApi = () => Api.get(\"/api/product/get_all_products\", config);\n \n\n// get single product api\nexport const getSingleProductApi = (id) =>  Api.get(`/api/product/get_single_product/${id}`, config);\n\n\n// delete product api\nexport const deleteProductApi = (id) =>  Api.delete(`/api/product/delete_product/${id}`,config);\n\n\n// update product api\nexport const updateProductApi = (id, data) =>  Api.put(`/api/product/update_product/${id}`, data,config);\n\n\n//http://localhost:5500/test"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,MAAM,GAAG;EACbD,OAAO,EAAE;IACPE,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;EACzD;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAMT,GAAG,CAACU,GAAG,CAAC,OAAO,CAAC;;AAE7C;AACA,OAAO,MAAMC,eAAe,GAAIC,IAAI,IAAKZ,GAAG,CAACa,IAAI,CAAC,kBAAkB,EAAED,IAAI,CAAC;;AAE3E;AACA,OAAO,MAAME,YAAY,GAAIF,IAAI,IAAKZ,GAAG,CAACa,IAAI,CAAC,iBAAiB,EAAED,IAAI,CAAC;;AAEvE;AACA,OAAO,MAAMG,gBAAgB,GAAIH,IAAI,IAAKZ,GAAG,CAACa,IAAI,CAAC,qBAAqB,EAAED,IAAI,CAAC;;AAE/E;AACA,OAAO,MAAMI,iBAAiB,GAAGA,CAAA,KAAMhB,GAAG,CAACU,GAAG,CAAC,+BAA+B,EAAEL,MAAM,CAAC;;AAGvF;AACA,OAAO,MAAMY,mBAAmB,GAAIC,EAAE,IAAMlB,GAAG,CAACU,GAAG,CAAE,mCAAkCQ,EAAG,EAAC,EAAEb,MAAM,CAAC;;AAGpG;AACA,OAAO,MAAMc,gBAAgB,GAAID,EAAE,IAAMlB,GAAG,CAACoB,MAAM,CAAE,+BAA8BF,EAAG,EAAC,EAACb,MAAM,CAAC;;AAG/F;AACA,OAAO,MAAMgB,gBAAgB,GAAGA,CAACH,EAAE,EAAEN,IAAI,KAAMZ,GAAG,CAACsB,GAAG,CAAE,+BAA8BJ,EAAG,EAAC,EAAEN,IAAI,EAACP,MAAM,CAAC;;AAGxG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}