{"ast":null,"code":"// import React, { useEffect, useState, useContext } from \"react\";\n// import axios from \"axios\";\n// import { Link } from \"react-router-dom\"; // Import Link from react-router-dom\n// import { CartContext } from \"./cart/CartContext\";\n// import Modal from \"./Modal\"; // Import Modal component\n// import '../css/product/product.css';\n\n// const Products = () => {\n//   const [products, setProducts] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [selectedProduct, setSelectedProduct] = useState(null); // State to hold selected product\n//   const { addToCart } = useContext(CartContext);\n\n//   useEffect(() => {\n//     // Fetch products from the backend\n//     const fetchProducts = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:3000/api/product/get_all_products\");\n//         const productsWithState = response.data.products.map((product) => ({\n//           ...product,\n//           quantity: 1,\n//           size: \"half\",\n//         }));\n//         setProducts(productsWithState);\n//         setLoading(false);\n//       } catch (err) {\n//         setError(err.message);\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchProducts();\n//   }, []);\n\n//   const handleQuantityChange = (id, newQuantity) => {\n//     setProducts((prevProducts) =>\n//       prevProducts.map((product) =>\n//         product._id === id ? { ...product, quantity: newQuantity } : product\n//       )\n//     );\n//   };\n\n//   const handleIncreaseQuantity = (id) => {\n//     setProducts((prevProducts) =>\n//       prevProducts.map((product) =>\n//         product._id === id ? { ...product, quantity: product.quantity + 1 } : product\n//       )\n//     );\n//   };\n\n//   const handleDecreaseQuantity = (id) => {\n//     setProducts((prevProducts) =>\n//       prevProducts.map((product) =>\n//         product._id === id && product.quantity > 1\n//           ? { ...product, quantity: product.quantity - 1 }\n//           : product\n//       )\n//     );\n//   };\n\n//   const handleSizeChange = (id, newSize) => {\n//     setProducts((prevProducts) =>\n//       prevProducts.map((product) =>\n//         product._id === id ? { ...product, size: newSize } : product\n//       )\n//     );\n//   };\n\n//   const calculateTotalPrice = (price, quantity, size) => {\n//     return size === \"full\" ? price * quantity * 2 : price * quantity;\n//   };\n\n//   const handleAddToCart = (product) => {\n//     addToCart(product);\n//   };\n\n//   // Function to handle modal opening and closing\n//   const openModal = (product) => {\n//     setSelectedProduct(product);\n//   };\n\n//   const closeModal = () => {\n//     setSelectedProduct(null);\n//   };\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>Error: {error}</div>;\n//   }\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"row\">\n//         {products.map((product) => (\n//           <div key={product._id} className=\"col-md-4\">\n//             <div className=\"card mb-4\">\n//               <button className=\"card-link\" onClick={() => openModal(product)}>\n//                 <img src={`http://localhost:3000/products/${product.productImage}`} className=\"card-img-top\" alt={product.productName} />\n//               </button>\n//               <div className=\"card-body\">\n//                 <h5 className=\"card-title\">{product.productName}</h5>\n//                 <p className=\"card-text\">{product.productDescription}</p>\n//                 <div className=\"d-flex justify-content-between align-items-center\">\n//                   <div className=\"btn-group\">\n//                     <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => handleDecreaseQuantity(product._id)}>-</button>\n//                     <span className=\"mx-2\">{product.quantity}</span>\n//                     <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => handleIncreaseQuantity(product._id)}>+</button>\n//                   </div>\n//                   <select\n//                     className=\"form-select form-select-sm\"\n//                     value={product.size}\n//                     onChange={(e) => handleSizeChange(product._id, e.target.value)}\n//                   >\n//                     <option value=\"half\">Half</option>\n//                     <option value=\"full\">Full</option>\n//                   </select>\n//                 </div>\n//                 <div className=\"d-flex justify-content-between align-items-center mt-2\">\n//                   <div className=\"text-success\">Rs.{calculateTotalPrice(product.productPrice, product.quantity, product.size)}</div>\n//                   <button className=\"btn btn-sm btn-primary\" onClick={() => handleAddToCart(product)}>Add to Cart</button>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Modal for displaying detailed product information */}\n//       {selectedProduct && (\n//         <Modal onClose={closeModal}>\n//           <div className=\"modal-header\">\n//             <h5 className=\"modal-title\">{selectedProduct.productName}</h5>\n//             <button type=\"button\" className=\"btn-close\" onClick={closeModal}></button>\n//           </div>\n//           <div className=\"modal-body\">\n//             <img src={`http://localhost:3000/products/${selectedProduct.productImage}`} className=\"img-fluid\" alt={selectedProduct.productName} />\n//             <p>{selectedProduct.productDescription}</p>\n//             <div>\n//               <strong>Price:</strong> Rs.{calculateTotalPrice(selectedProduct.productPrice, selectedProduct.quantity, selectedProduct.size)}\n//             </div>\n//             <div className=\"d-flex justify-content-between align-items-center mt-2\">\n//               <div className=\"btn-group\">\n//                 <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => handleDecreaseQuantity(selectedProduct._id)}>-</button>\n//                 <span className=\"mx-2\">{selectedProduct.quantity}</span>\n//                 <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => handleIncreaseQuantity(selectedProduct._id)}>+</button>\n//               </div>\n//               <select\n//                 className=\"form-select form-select-sm\"\n//                 value={selectedProduct.size}\n//                 onChange={(e) => handleSizeChange(selectedProduct._id, e.target.value)}\n//               >\n//                 <option value=\"half\">Half</option>\n//                 <option value=\"full\">Full</option>\n//               </select>\n//             </div>\n//             <button className=\"btn btn-sm btn-primary mt-2\" onClick={() => handleAddToCart(selectedProduct)}>Add to Cart</button>\n//           </div>\n//         </Modal>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Products;","map":{"version":3,"names":[],"sources":["/Users/keshabbasnet/Documents/web_development/food_delivery/frontend/src/components/Products.jsx"],"sourcesContent":["// import React, { useEffect, useState, useContext } from \"react\";\n// import axios from \"axios\";\n// import { Link } from \"react-router-dom\"; // Import Link from react-router-dom\n// import { CartContext } from \"./cart/CartContext\";\n// import Modal from \"./Modal\"; // Import Modal component\n// import '../css/product/product.css';\n\n// const Products = () => {\n//   const [products, setProducts] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [selectedProduct, setSelectedProduct] = useState(null); // State to hold selected product\n//   const { addToCart } = useContext(CartContext);\n\n//   useEffect(() => {\n//     // Fetch products from the backend\n//     const fetchProducts = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:3000/api/product/get_all_products\");\n//         const productsWithState = response.data.products.map((product) => ({\n//           ...product,\n//           quantity: 1,\n//           size: \"half\",\n//         }));\n//         setProducts(productsWithState);\n//         setLoading(false);\n//       } catch (err) {\n//         setError(err.message);\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchProducts();\n//   }, []);\n\n//   const handleQuantityChange = (id, newQuantity) => {\n//     setProducts((prevProducts) =>\n//       prevProducts.map((product) =>\n//         product._id === id ? { ...product, quantity: newQuantity } : product\n//       )\n//     );\n//   };\n\n//   const handleIncreaseQuantity = (id) => {\n//     setProducts((prevProducts) =>\n//       prevProducts.map((product) =>\n//         product._id === id ? { ...product, quantity: product.quantity + 1 } : product\n//       )\n//     );\n//   };\n\n//   const handleDecreaseQuantity = (id) => {\n//     setProducts((prevProducts) =>\n//       prevProducts.map((product) =>\n//         product._id === id && product.quantity > 1\n//           ? { ...product, quantity: product.quantity - 1 }\n//           : product\n//       )\n//     );\n//   };\n\n//   const handleSizeChange = (id, newSize) => {\n//     setProducts((prevProducts) =>\n//       prevProducts.map((product) =>\n//         product._id === id ? { ...product, size: newSize } : product\n//       )\n//     );\n//   };\n\n//   const calculateTotalPrice = (price, quantity, size) => {\n//     return size === \"full\" ? price * quantity * 2 : price * quantity;\n//   };\n\n//   const handleAddToCart = (product) => {\n//     addToCart(product);\n//   };\n\n//   // Function to handle modal opening and closing\n//   const openModal = (product) => {\n//     setSelectedProduct(product);\n//   };\n\n//   const closeModal = () => {\n//     setSelectedProduct(null);\n//   };\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>Error: {error}</div>;\n//   }\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"row\">\n//         {products.map((product) => (\n//           <div key={product._id} className=\"col-md-4\">\n//             <div className=\"card mb-4\">\n//               <button className=\"card-link\" onClick={() => openModal(product)}>\n//                 <img src={`http://localhost:3000/products/${product.productImage}`} className=\"card-img-top\" alt={product.productName} />\n//               </button>\n//               <div className=\"card-body\">\n//                 <h5 className=\"card-title\">{product.productName}</h5>\n//                 <p className=\"card-text\">{product.productDescription}</p>\n//                 <div className=\"d-flex justify-content-between align-items-center\">\n//                   <div className=\"btn-group\">\n//                     <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => handleDecreaseQuantity(product._id)}>-</button>\n//                     <span className=\"mx-2\">{product.quantity}</span>\n//                     <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => handleIncreaseQuantity(product._id)}>+</button>\n//                   </div>\n//                   <select\n//                     className=\"form-select form-select-sm\"\n//                     value={product.size}\n//                     onChange={(e) => handleSizeChange(product._id, e.target.value)}\n//                   >\n//                     <option value=\"half\">Half</option>\n//                     <option value=\"full\">Full</option>\n//                   </select>\n//                 </div>\n//                 <div className=\"d-flex justify-content-between align-items-center mt-2\">\n//                   <div className=\"text-success\">Rs.{calculateTotalPrice(product.productPrice, product.quantity, product.size)}</div>\n//                   <button className=\"btn btn-sm btn-primary\" onClick={() => handleAddToCart(product)}>Add to Cart</button>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Modal for displaying detailed product information */}\n//       {selectedProduct && (\n//         <Modal onClose={closeModal}>\n//           <div className=\"modal-header\">\n//             <h5 className=\"modal-title\">{selectedProduct.productName}</h5>\n//             <button type=\"button\" className=\"btn-close\" onClick={closeModal}></button>\n//           </div>\n//           <div className=\"modal-body\">\n//             <img src={`http://localhost:3000/products/${selectedProduct.productImage}`} className=\"img-fluid\" alt={selectedProduct.productName} />\n//             <p>{selectedProduct.productDescription}</p>\n//             <div>\n//               <strong>Price:</strong> Rs.{calculateTotalPrice(selectedProduct.productPrice, selectedProduct.quantity, selectedProduct.size)}\n//             </div>\n//             <div className=\"d-flex justify-content-between align-items-center mt-2\">\n//               <div className=\"btn-group\">\n//                 <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => handleDecreaseQuantity(selectedProduct._id)}>-</button>\n//                 <span className=\"mx-2\">{selectedProduct.quantity}</span>\n//                 <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => handleIncreaseQuantity(selectedProduct._id)}>+</button>\n//               </div>\n//               <select\n//                 className=\"form-select form-select-sm\"\n//                 value={selectedProduct.size}\n//                 onChange={(e) => handleSizeChange(selectedProduct._id, e.target.value)}\n//               >\n//                 <option value=\"half\">Half</option>\n//                 <option value=\"full\">Full</option>\n//               </select>\n//             </div>\n//             <button className=\"btn btn-sm btn-primary mt-2\" onClick={() => handleAddToCart(selectedProduct)}>Add to Cart</button>\n//           </div>\n//         </Modal>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Products;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}